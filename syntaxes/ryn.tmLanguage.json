{
    "name": "Ryn",
    "scopeName": "source.ryn",
    "patterns": [
      {
        "name": "comment.line.number-sign.ryn",
        "match": "#.*$"
      },
      {
        "name": "string.quoted.double.ryn",
        "begin": "\"",
        "end": "\"",
        "patterns": [
          {
            "name": "constant.character.escape.ryn",
            "match": "\\\\."
          }
        ]
      },
      {
        "name": "constant.numeric.ryn",
        "match": "\\b\\d+(\\.\\d+)?\\b"
      },
      {
        "name": "keyword.control.ryn",
        "match": "\\b(?:import|class|fn|if|else|return|let|var|while|for|break|continue|match)\\b"
      },
      {
        "name": "storage.type.ryn",
        "match": "\\b(?:Int|String|Float|Bool|Void)\\b"
      },
      {
        "match": "\\bfn\\s+([A-Za-z_]\\w*)",
        "captures": {
          "1": {
            "name": "entity.name.function.ryn"
          }
        }
      },
      {
        "match": "\\bclass\\s+([A-Za-z_]\\w*)",
        "captures": {
          "1": {
            "name": "entity.name.class.ryn"
          }
        }
      },
      {
        "match": "(?<!\\.)\\b([A-Za-z_]\\w*)(?=\\()",
        "captures": {
          "1": {
            "name": "support.function.call.ryn"
          }
        }
      }
    ]
  }
  